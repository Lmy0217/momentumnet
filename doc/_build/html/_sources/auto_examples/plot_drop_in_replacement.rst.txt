
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_drop_in_replacement.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_drop_in_replacement.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_drop_in_replacement.py:


======================================================
Momentum ResNets are a drop-in replacement for ResNets
======================================================

This illustrates on two simple examples how to replace a ResNet with a MomentumNet 

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default


    # Authors: Michael Sander, Pierre Ablin
    # License: MIT
    import torch
    from momentumnet import transform_to_momentumnet
    import matplotlib.pyplot as plt
    import numpy as np


.. GENERATED FROM PYTHON SOURCE LINES 18-20

A torchvision model
####################

.. GENERATED FROM PYTHON SOURCE LINES 20-29

.. code-block:: default


    from torchvision.models import resnet101

    resnet = resnet101(pretrained=True)
    mresnet101 = transform_to_momentumnet(resnet, gamma=0.99, use_backprop=False)
    x = torch.rand((64, 3, 7, 7), requires_grad=True)
    loss = mresnet101(x).sum()
    loss.backward()


.. GENERATED FROM PYTHON SOURCE LINES 30-32

It naturally extends the original ResNet
#########################################

.. GENERATED FROM PYTHON SOURCE LINES 32-51

.. code-block:: default


    x = torch.rand((64, 3, 7, 7))
    resnet = resnet101(pretrained=True)
    lx = resnet(x)
    outputs = []
    ys = np.linspace(0, 0.2, 20)
    for gamma in ys:
        mresnet101 = transform_to_momentumnet(resnet, gamma=gamma)
        outputs.append(((lx - mresnet101(x))**2).sum())

    plt.figure(figsize=(10, 5))
    plt.plot(
        ys, outputs, linewidth=4, color="red"
    )
    y_ = plt.ylabel("Squared norm difference with the original output")
    x_ = plt.xlabel("Gamma")
    plt.show()



.. GENERATED FROM PYTHON SOURCE LINES 52-54

A Natural Language Transformer model
#####################################

.. GENERATED FROM PYTHON SOURCE LINES 54-63

.. code-block:: default


    transformer = torch.nn.Transformer(num_encoder_layers=6, num_decoder_layers=6)
    mtransformer = transform_to_momentumnet(
        transformer,
        residual_layers=["encoder.layers", "decoder.layers"],
        gamma=0.99,
        use_backprop=False,
        keep_first_layer=False,
    )


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_plot_drop_in_replacement.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_drop_in_replacement.py <plot_drop_in_replacement.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_drop_in_replacement.ipynb <plot_drop_in_replacement.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
